!function(f,v){"object"==typeof exports&&"undefined"!=typeof module?module.exports=v(require("three"),require("gsap/TweenMax")):"function"==typeof define&&define.amd?define(["three","gsap/TweenMax"],v):f.hoverEffect=v(f.THREE,f.TweenMax)}(this,function(f,v){return v=v&&v.hasOwnProperty("default")?v.default:v,function(h){function w(){for(var f=arguments,v=0;v<arguments.length;v++)if(void 0!==f[v])return f[v]}var F=h.parent,l=h.displacementImage,M=h.image1,P=h.image2,L=w(h.intensity1,h.intensity,1),U=w(h.intensity2,h.intensity,1),C=w(h.angle,Math.PI/4),S=w(h.angle1,C),W=w(h.angle2,3*-C),D=w(h.speedIn,h.speed,1.6),_=w(h.speedOut,h.speed,1.2),z=w(h.hover,!0),V=w(h.easing,Expo.easeOut);if(F)if(M&&P&&l){var q=new f.Scene,G=new f.OrthographicCamera(F.offsetWidth/-2,F.offsetWidth/2,F.offsetHeight/2,F.offsetHeight/-2,1,1e3);G.position.z=1;var B=new f.WebGLRenderer({antialias:!1});B.setPixelRatio(window.devicePixelRatio),B.setClearColor(16777215,0),B.setSize(F.offsetWidth,F.offsetHeight),F.appendChild(B.domElement);var k=function(){B.render(q,G)},A=new f.TextureLoader;A.crossOrigin="";var J=A.load(M,k),K=A.load(P,k),N=A.load(l,k);N.wrapS=N.wrapT=f.RepeatWrapping,J.magFilter=K.magFilter=f.LinearFilter,J.minFilter=K.minFilter=f.LinearFilter;var Q=new f.ShaderMaterial({uniforms:{intensity1:{type:"f",value:L},intensity2:{type:"f",value:U},dispFactor:{type:"f",value:0},angle1:{type:"f",value:S},angle2:{type:"f",value:W},texture1:{type:"t",value:J},texture2:{type:"t",value:K},disp:{type:"t",value:N}},vertexShader:"\nvarying vec2 vUv;\nvoid main() {\n  vUv = uv;\n  gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}\n",fragmentShader:"\nvarying vec2 vUv;\n\nuniform float dispFactor;\nuniform sampler2D disp;\n\nuniform sampler2D texture1;\nuniform sampler2D texture2;\nuniform float angle1;\nuniform float angle2;\nuniform float intensity1;\nuniform float intensity2;\n\nmat2 getRotM(float angle) {\n  float s = sin(angle);\n  float c = cos(angle);\n  return mat2(c, -s, s, c);\n}\n\nvoid main() {\n  vec4 disp = texture2D(disp, vUv);\n  vec2 dispVec = vec2(disp.r, disp.g);\n  vec2 distortedPosition1 = vUv + getRotM(angle1) * dispVec * intensity1 * dispFactor;\n  vec2 distortedPosition2 = vUv + getRotM(angle2) * dispVec * intensity2 * (1.0 - dispFactor);\n  vec4 _texture1 = texture2D(texture1, distortedPosition1);\n  vec4 _texture2 = texture2D(texture2, distortedPosition2);\n  gl_FragColor = mix(_texture1, _texture2, dispFactor);\n}\n",transparent:!0,opacity:1}),X=new f.PlaneBufferGeometry(F.offsetWidth,F.offsetHeight,1),Y=new f.Mesh(X,Q);q.add(Y),z&&(F.addEventListener("mouseenter",Z),F.addEventListener("touchstart",Z),F.addEventListener("mouseleave",$),F.addEventListener("touchend",$)),window.addEventListener("resize",function(f){B.setSize(F.offsetWidth,F.offsetHeight)}),this.next=Z,this.previous=$}else console.warn("One or more images are missing");else console.warn("Parent missing");function Z(){v.to(Q.uniforms.dispFactor,D,{value:1,ease:V,onUpdate:k,onComplete:k})}function $(){v.to(Q.uniforms.dispFactor,_,{value:0,ease:V,onUpdate:k,onComplete:k})}}});
//# sourceMappingURL=hover-effect.umd.js.map
